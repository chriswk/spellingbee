name: Build

on:
  push:

jobs:
  build-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Rust cache
        uses: swatinem/rust-cache@v2
      - name: Build
        run: >
          cargo build
          --verbose
      - name: Run tests (without coverage)
        if: matrix.os != 'ubuntu-latest'
        run: >
          cargo test
          --verbose
      - name: Install cargo-tarpaulin (for coverage)
        uses: taiki-e/install-action@v2
        if: matrix.os == 'ubuntu-latest'
        with:
          tool: cargo-tarpaulin
      - name: Run tests (with coverage)
        if: matrix.os == 'ubuntu-latest'
        run: >
          rustup toolchain install --profile minimal nightly
          && cargo tarpaulin
          --verbose
          --out Xml
          --engine llvm
          --skip-clean
          --tests
          --doc
          --exclude-files 'benches/*'
      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
  release-please:
    name: Execute release chores
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: build-test
    outputs:
      created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          release-type: rust
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.created == 'true'
    environment: crates.io
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Rust
        uses: swatinem/rust-cache@v2
      - name: Publish
        run: >
          cargo publish
          --verbose
          --allow-dirty
          --no-verify
          --token ${{ secrets.CRATES_IO_TOKEN }}
    
